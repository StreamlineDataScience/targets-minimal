on:
  push:
    branches:
      - main

name: run

jobs:
  run:
    runs-on: macOS-latest
    env:
      BRANCH_RUNS: targets-runs # Branch to upload latest run
      GITHUB_PAT: ${{ secrets.GITHUBPAT }}
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
      - uses: r-lib/actions/setup-pandoc@master

      - name: Identify R packages
        run: |
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-custom_suffix-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-custom_suffix-

      - name: Install R packages
        run: remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Cache targets data store
        id: cache-store
        uses: actions/cache@v2
        with:
          # If your pipeline generates more custom output files, write them below.
          # Delete index.html if the pipeline will not create it.
          path: |
            _targets
            index.html
          key: ${{ runner.os }}-targets-${{ hashFiles('_targets/meta/meta') }}
          restore-keys: ${{ runner.os }}-targets-

      - name: Run targets pipeline
        run: targets::tar_make() # Optionally use a different command such as tar_make_clustermq().
        shell: Rscript {0}

      - name: Upload latest run
        run: |
          mkdir ../runs
          mv .git ../runs
          RUN=$(basename $(pwd))
          cd ../runs
          git fetch --depth=1 origin $BRANCH_RUNS && git checkout $BRANCH_RUNS || git checkout --orphan $BRANCH_RUNS
          find ../$RUN -maxdepth 1 -mindepth 1 -name '*' -exec echo -n {} . \;
          echo moving
          find ../$RUN -maxdepth 1 -mindepth 1 -name '*' -exec mv -n {} . \;
          ls -a
          git status
          git add -f *
          git commit -am "Run the pipeline" || true
          git push -u origin $BRANCH_RUNS
